package main

import (
	"fmt"
	"time"
)

// Реализовать собственную функцию sleep(duration) аналогично встроенной функции time.Sleep,
// которая приостанавливает выполнение текущей горутины.
// Важно: в отличии от настоящей time.Sleep, ваша функция должна именно блокировать выполнение (например, через таймер или цикл),
// а не просто вызывать time.Sleep :) — это упражнение.
// Можно использовать канал + горутину, или цикл на проверку времени (не лучший способ, но для обучения).

// без пакета time (будто бы?) невозможно, во всяком случае не нашел в go возможности
// запросить у системы напрямую остановку горутины на время (и как время тогда отмерять?)
func sleep(duration time.Duration) {
	timer := time.NewTimer(duration)
	<-timer.C
}

func main() {
	sleep(6*time.Second)
	fmt.Println("test")
}
