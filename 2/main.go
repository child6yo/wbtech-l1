package main

import (
	"fmt"
	"sync"
)

// Написать программу, которая конкурентно рассчитает значения квадратов чисел,
// взятых из массива [2,4,6,8,10], и выведет результаты в stdout.

// функция принимает число и возводит его квадрат в stdout
func toSquare(n int) {
	fmt.Println(n * n)
}

// в реализации отсутствуют каналы.
// мне показалось использование каналов - усложнением, так как в любом случае конкурентно запущенные
// функции будут возвращать результат не в том же порядке, как числа расположенны в массиве.
// таким образом, технически в данной задаче не имеет значение, собираешь данные в новый массив или выводишь сразу.
// также при использовании каналов необходимы n затраты по памяти.
func main() {
	array := []int{2, 4, 6, 8, 10}

	var wg sync.WaitGroup

	for _, n := range array {
		wg.Add(1)
		go func(n int) {
			defer wg.Done()
			toSquare(n)
		}(n)
	}

	wg.Wait()
}
