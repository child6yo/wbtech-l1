package main

import "fmt"

// Разработать конвейер чисел.
// Даны два канала: в первый пишутся числа x из массива, во второй – результат операции x*2.
// После этого данные из второго канала должны выводиться в stdout.
// То есть, организуйте конвейер из двух этапов с горутинами: генерация чисел и их обработка.
// Убедитесь, что чтение из второго канала корректно завершается

// реализуем паттерн пайплайна

// первый этап - передаем массив, функция возвращает канал,
// в который будет писать умноженные на 2 числа
func input(x []int) <-chan int {
	out := make(chan int)
	go func() {
		for _, n := range x {
			out <- n
		}
		close(out)
	}()
	return out
}

// второй этап - функция принимает канал, преобразует данные из него,
// пишет их в возвращаемый нанал
func output(in <-chan int) <-chan int {
	out := make(chan int)
	go func() {
		for n := range in {
			n *= 2
			out <- n
		}
		close(out)
	}()
	return out
}

func main() {
	array := []int{1, 2, 3, 4, 5, 6, 7, 8}
	in := input(array)
	out := output(in)

	for n := range out {
		fmt.Println(n)
	}
}
